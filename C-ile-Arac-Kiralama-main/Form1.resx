<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>