<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>