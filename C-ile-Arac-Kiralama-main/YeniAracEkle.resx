<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="groupBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>